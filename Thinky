<html><head><meta content="text/html; charset=UTF-8" http-equiv="content-type"><style type="text/css">ol{margin:0;padding:0}table td,table th{padding:0}.c12{-webkit-text-decoration-skip:none;color:#000000;font-weight:400;text-decoration:underline;vertical-align:baseline;text-decoration-skip-ink:none;font-size:26pt;font-family:"Arial"}.c5{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:"Arial";font-style:normal}.c6{background-color:#1e1e1e;padding-top:0pt;padding-bottom:0pt;line-height:1.3571428571428572;orphans:2;widows:2;text-align:left}.c32{-webkit-text-decoration-skip:none;color:#000000;text-decoration:underline;vertical-align:baseline;text-decoration-skip-ink:none;font-size:11pt;font-family:"Arial"}.c4{color:#6aa94f;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10.5pt;font-family:"Courier New";font-style:normal}.c9{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left;height:11pt}.c3{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Arial";font-style:normal}.c23{padding-top:0pt;padding-bottom:3pt;line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c0{color:#dcdcdc;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10.5pt;font-family:"Courier New";font-style:normal}.c20{padding-top:18pt;padding-bottom:6pt;line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c26{padding-top:20pt;padding-bottom:6pt;line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c13{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c28{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Arial"}.c29{padding-top:12pt;padding-bottom:12pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c27{color:#000000;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:"Arial"}.c25{font-size:10.5pt;font-family:"Courier New";color:#82c6ff;font-weight:400}.c24{color:#000000;font-weight:400;font-size:26pt;font-family:"Arial"}.c2{font-size:10.5pt;font-family:"Courier New";color:#d4d4d4;font-weight:400}.c19{font-size:10.5pt;font-family:"Courier New";color:#9cdcfe;font-weight:400}.c17{font-size:10.5pt;font-family:"Courier New";color:#dcdcaa;font-weight:400}.c1{font-size:10.5pt;font-family:"Courier New";color:#dcdcdc;font-weight:400}.c14{font-size:10.5pt;font-family:"Courier New";color:#ce9178;font-weight:400}.c16{font-size:10.5pt;font-family:"Courier New";color:#569cd6;font-weight:400}.c22{color:#000000;font-weight:400;font-size:27pt;font-family:"Arial"}.c8{font-size:10.5pt;font-family:"Courier New";color:#b5cea8;font-weight:400}.c15{font-size:10.5pt;font-family:"Courier New";color:#c586c0;font-weight:400}.c31{color:#000000;font-weight:400;font-size:20pt;font-family:"Arial"}.c33{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c34{color:#000000;font-weight:400;font-family:"Arial"}.c7{text-decoration:none;vertical-align:baseline;font-style:normal}.c35{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;text-decoration:underline}.c36{font-style:normal}.c38{background-color:#ffff00}.c21{font-size:12pt}.c18{font-weight:700}.c30{font-size:26pt}.c37{text-indent:36pt}.c10{height:11pt}.c11{font-style:italic}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:"Arial"}p{margin:0;color:#000000;font-size:11pt;font-family:"Arial"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class="c33 doc-content"><div><p class="c13 c37"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Huffington, </span></p></div><p class="c23 title" id="h.9abo8jjlk6vc"><span class="c24 c7">Thinking machines: Ai Art Project</span></p><p class="c13"><span class="c3">What the hell is wrong with AI Art? </span></p><p class="c13"><span class="c3">ie) Whats that missing piece from Ai art that makes it seem so off and lifeless? </span></p><p class="c9"><span class="c3"></span></p><h1 class="c26" id="h.n3yujl8xa3d0"><span class="c7 c31">Introduction</span></h1><p class="c13"><span>I&rsquo;ve been creating for as long as I can remember&mdash;since I was old enough to draw circles in the dirt or stack toothpicks together to make a tipi. My passion for art really began when I was nine years old and made a diorama about Arctic life for a school project. From that moment, my interest only grew. Over the years, I&rsquo;ve explored nearly every artistic medium that comes to mind, though I&rsquo;ve naturally gravitated toward my favorites. Art has always been a deeply personal and rewarding process for me, a way to express myself and connect with others through creativity. For the majority of AI&rsquo;s existence, I saw AI art&mdash;and AI in general&mdash;as lazy, a shortcut that undermines genuine creativity and hard work. My skepticism stemmed from various sources, like the writers&rsquo; strike and predictions that AI would soon take over industries such as scriptwriting, digital art, and animation. There was constant talk about how students were using AI to avoid doing their own work, and my biggest fear was that AI would make creative jobs obsolete. Why hire and collaborate with living, breathing creators when a program could do the job faster and cheaper? I worried this shift would strip people of jobs and deprive the world of the raw, human-made creations that define the art world. These fears weren&rsquo;t baseless&mdash;they were reinforced by media, articles, and conversations that centered around the art community and its growing concerns about AI. For the longest time, it was drilled into my head that AI was nothing but a threat to creativity. I refused to even touch it. I came into college fully believing that I never would. Whenever I saw AI-generated art, I couldn&rsquo;t help but think: </span><span class="c11">This doesn&rsquo;t even look like real art.</span><span>&nbsp;Questions like &ldquo;Why does it look so weird?&rdquo; or &ldquo;Why does it feel so lifeless?&rdquo; would cloud my mind. To me, AI art seemed like an imposter&mdash;a hollow attempt to replicate something only humans could truly create. But now, as I dive deeper into this topic, I&rsquo;m challenging my own assumptions. I&rsquo;m starting to ask myself </span><span class="c11">why</span><span>&nbsp;AI art looks the way it does and what that says about both the tool and the people who use it. I want to approach this with an open mind and really try to understand AI&mdash;not as an enemy, but as a potential tool. I&rsquo;ve set for myself during this exploration is to grow more open-minded about AI art. I want to see how it can coexist with traditional methods of creation, how it might be used as a tool for creativity rather than replace it. Instead of focusing on what AI art </span><span class="c11">can&rsquo;t</span><span>&nbsp;do, I want to better understand what it </span><span class="c11">can</span><span class="c3">&nbsp;do and how it might fit into the ever-evolving landscape of creativity.</span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 397.33px;"><img alt="" src="images/image11.png" style="width: 624.00px; height: 397.33px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c11">Fallen Angel</span><span class="c3">&nbsp;by French artist Alexandre Cabanel.</span></p><p class="c13"><span class="c3">I chose this piece primarily for the subject&#39;s eyes, which convey a remarkable depth of passion and emotion. While the painting is undeniably beautiful, it&rsquo;s the complexity of feelings reflected in those eyes that truly captivates me. The eyes don&rsquo;t just express a single emotion but instead hold a range of feelings, creating a rich narrative. I admire every aspect of this artwork, from the intense lighting that enhances the mood to the vibrant colors and dynamic brush strokes that bring it to life. Together, these elements create a compelling experience that resonates deeply with me, making it a standout piece.</span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 453.50px; height: 604.00px;"><img alt="" src="images/image4.jpg" style="width: 474.81px; height: 626.30px; margin-left: -15.22px; margin-top: -7.43px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c13"><span class="c11">Study after Vel&aacute;zquez&#39;s Portrait of Pope Innocent X</span><span class="c3">&nbsp;by Francis Bacon</span></p><p class="c13"><span>This painting gives me a lot of feelings. But to understand the feelings it must be know that this painting is actually a recreation of a portrait of pope innocent the X. The original portrait was supposed to radiate power and authority. This purpose was rather odd for a pope who was supposed to be kind and be present for the people and god. This pope was anything but innocent so </span><span class="c3">Francis Bacon remade it to show what aura he truly emits. The painting entirely juxtaposes the name of the pope for how bacon views this man. This painting gives the feeling of distruction, and more importantly the correctness of this mans nature. The smear effect and the chaos serve to be a sort of explosion of color. They are also jagged and sharplike creating a sense of pain. Power is a big theme here but this one is more true to the the man, religious power and the corruption that Pope innocent chose to aquire. </span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 369.33px;"><img alt="" src="images/image6.jpg" style="width: 624.00px; height: 468.42px; margin-left: 0.00px; margin-top: -57.05px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c13"><span class="c11">Sadak in Search of the Waters of Oblivion </span><span class="c3">1812 john martin </span></p><p class="c9"><span class="c3"></span></p><p class="c13"><span>The painting </span><span class="c11">Sadak in Search of waters of oblivion</span><span class="c3">&nbsp;by John Martin has always stood out to me. A common theme in John Martin&rsquo;s paintings is beauty in destruction. This paining properly expresses this concept. Even without knowing the story of Sadak one can gather strong feelings from this piece. Everything from the lighting to the brushstrokes have life and despair. The light specifically is a reddish orange but it is the brighwest on the man climbing out of the pit. Its whole purpose is to try and drive the eyes away from the vast and beautiful landscape. </span></p><p class="c13"><span class="c3">The details are riveting and enticing, something so ugly and aggressive is made to be the most beautiful painting I&#39;ve seen. There is some guilt in saying that something disgusting is beautiful but that&#39;s just nature and being alive. It highlights how tiny we are in comparison to the vastness of existence, reminding us of our fragile place within it all.</span></p><p class="c9"><span class="c3"></span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 571.50px; height: 575.75px;"><img alt="Keith Haring - unfinished painting (1989) : r/museum" src="images/image7.jpg" style="width: 571.50px; height: 575.75px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c13"><span class="c11 c28">&nbsp;Unfinished painting - keith harrington</span></p><p class="c13"><span class="c3">To understand the power of this painting is that this was madeby keith harrington a man who was queer and stuck down in his prime due to aids. This whole painting was a symbol for all the beautiful lives that were left unfinished due to the aid crisis. Even with the context in mind a person doesnt have to be gay or have been deeply connected to the aids crisis to feels the emotion in this painting. Its simply empathy that powers its emotion. But even without the context it still It mirrors a sense emptiness. The livelyness, colors, and how its almost like the people who are drawn into the finished section are dancing but it is harshly stopped as it slowly drips down. </span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c23 title" id="h.m8rybv88vkh7"><span class="c35">Ai Recreation Attempt</span></p><h2 class="c20" id="h.8g885wvru93o"><span class="c18 c11">Fallen Angel</span><span class="c27 c18 c36">&nbsp;</span></h2><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 613.50px; height: 605.70px;"><img alt="" src="images/image9.png" style="width: 613.50px; height: 605.70px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c13"><span class="c3">The Ai generated paice of the fallen angel give a feeling but not the same feeling as the original. The original gives &ldquo;betreayed, anguishment, depression and anger while the ai generated one gives off a sense of etherialness and perfection. The main reason why I picked this image was because of the angel&#39;s eyes and the eyes of the angel is the thing that the AI just couldn&#39;t do. No matter how much I emphasized the eyes and the emotions behind them they usually blackened them out and made them not visible. The ai art focuses more on the attractiveness of the angel rather then the depression and betrayal that the original painting emulates.</span></p><h2 class="c20" id="h.y8ebgzxn7j3b"><span class="c11 c18">Study after Vel&aacute;zquez&#39;s Portrait of Pope Innocent X</span></h2><p class="c13"><span class="c3">Ai description: &ldquo;there is a pope sitting in a chair with an almost ghost like aura, the whole painting is smeared and distorts the pope and his surrounding. the pope is sitting in a thin gold chair while the top half of their body holds a light purple hue while the bottom of the robe holds a white hue. coming out of the chair there are gold lines. this has a Baroque painting style during the 1600s in italy.&rdquo;</span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 432.31px; height: 432.31px;"><img alt="" src="images/image10.png" style="width: 432.31px; height: 432.31px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c13"><span class="c30">&nbsp; &nbsp;</span><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c7 c22"></span></p><p class="c9"><span class="c22 c7"></span></p><p class="c9"><span class="c22 c7"></span></p><p class="c9"><span class="c3"></span></p><p class="c13"><span>I specifically added this one because this was the 1st image to come out of my request </span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 643.50px; height: 643.50px;"><img alt="" src="images/image5.png" style="width: 643.50px; height: 643.50px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c13"><span>The paint ended up being pretty horror like even being able to mimic the screaming and terrorized face that was on the original. The issue that I had was each time I try and make the painting grutest but it still embodies the perfection of the pope concept. The whole idea of Fransis bacons portrait was to show corruption and ill will. It took me a while to actually acquire the horror and dark etherealism of the painting. I made around 5 attempts to make the painting on the right with chatgpt. Ai kept making the pope a positive being of light and love which was the opposite of what i ws trying to get it to do. It doesn&#39;t look like AI</span><span>&nbsp;can</span><span class="c3">&nbsp;make a distorted image; it doesn&#39;t give the same energy as the original piece. From what I can tell it keeps trying to make beautiful things until I deliberately tell it to be as ugly as possible. Both hold the ghost like an aura but it just doesn&#39;t feel the same. It genuinely cannot emulate that smear effect. </span></p><h2 class="c20" id="h.uc0xlsgex780"><span class="c18 c11 c27">Sadak in Search of the Waters of Oblivion</span></h2><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 604.50px; height: 442.49px;"><img alt="" src="images/image13.png" style="width: 604.50px; height: 442.49px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c13"><span class="c3">&ldquo;Sadak in Search of the Waters of Oblivion&rdquo;- &nbsp;John Martin </span></p><p class="c13"><span>This one actually did a pretty good job on the grandness of the painting. Although the AI generated art gives off more of a heroic essence like they haven&#39;t yet embarked on their journey. Like they&rsquo;re going to go slay a dragon or defeat an entire army or something liek that. &nbsp;In contrast the Orginial is similar to the end of the journey and the man crawls out of pit with defeat and is simultaneously accepting that he failed. The lighting is much softer in the original rather than in the AI generated art where the lighting is much harsher and doesn&#39;t give that soft and depressed feeling. </span></p><h2 class="c20" id="h.z1qjbnvr9cb3"><span class="c18 c11">&ldquo;Unfinished Painting&rdquo; by Keith Harrington</span></h2><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 414.50px; height: 417.59px;"><img alt="" src="images/image12.png" style="width: 414.50px; height: 417.59px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 399.26px; height: 383.50px;"><img alt="" src="images/image14.png" style="width: 399.26px; height: 383.50px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c9"><span class="c3"></span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 540.50px; height: 540.50px;"><img alt="" src="images/image3.png" style="width: 540.50px; height: 540.50px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c9"><span class="c3"></span></p><p class="c13"><span>My 1st attempt was kinda bland no matter how into detail I went The AI painting seems kind of lifeless, something you would see in a thrift store or in a home goods definitely not on a museum wall.I tried to straight out ask Chat gpt to replicate the unfinished paiting to see if it was even possible of if it knew what it was and it only gave me this. Which was more interesting but it still appeared to be a finished product that was lightly smeared for a dramatic effect. Like it didnt give the same feelings of emptiness and sadness as the original it just looks more like a cave drawing that slowly withered away over time. So now that I knew that the vision was somewhat possible I kept trying and trying but everytime it got something that was finished. Like the last one I did looked like a character design from the movie &ldquo;Soul&rdquo;. Which was better then the rest but it still didnt emulate that feeling that the original piece gave off. My conclusion from this specific piece was that I don&#39;t think AI</span><span>&nbsp;can</span><span class="c3">&nbsp;actually make something that is unfinished. I tried to be incredibly straightforward about how some sections are left completely blank and it kept giving me an entirely finished painting. &nbsp;</span></p><p class="c9"><span class="c3"></span></p><p class="c23 title" id="h.gocf72ax4x2b"><span class="c11 c12">Coding to replicate</span></p><p class="c13"><span>*chatgpt and gemini were used for all of these. </span></p><p class="c9"><span class="c3"></span></p><h2 class="c20" id="h.7p4v26o22t7o"><span class="c18 c11">Unfinished Painting</span></h2><p class="c6"><span class="c15">import</span><span class="c2">&nbsp;matplotlib.pyplot </span><span class="c15">as</span><span class="c2 c7">&nbsp;plt</span></p><p class="c6"><span class="c15">import</span><span class="c2">&nbsp;numpy </span><span class="c15">as</span><span class="c2 c7">&nbsp;np</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Set up the figure</span></p><p class="c6"><span class="c2">fig</span><span class="c1">,</span><span class="c2">&nbsp;ax = plt.subplots</span><span class="c1">(</span><span class="c2">figsize=</span><span class="c1">(</span><span class="c8">10</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c0">))</span></p><p class="c6"><span class="c2">ax.set_xlim</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c0">)</span></p><p class="c6"><span class="c2">ax.set_ylim</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c0">)</span></p><p class="c6"><span class="c2">ax.set_aspect</span><span class="c1">(</span><span class="c14">&#39;equal&#39;</span><span class="c0">)</span></p><p class="c6"><span class="c2">ax.axis</span><span class="c1">(</span><span class="c14">&#39;off&#39;</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Define colors</span></p><p class="c6"><span class="c2">background_color = </span><span class="c14">&#39;#FFD700&#39;</span><span class="c2">&nbsp; </span><span class="c4"># Yellow background</span></p><p class="c6"><span class="c2">line_color = </span><span class="c14">&#39;#000000&#39;</span><span class="c2">&nbsp; </span><span class="c4"># Black outline</span></p><p class="c6"><span class="c2">red_color = </span><span class="c14 c7">&#39;#FF0000&#39;</span></p><p class="c6"><span class="c2">blue_color = </span><span class="c14 c7">&#39;#0000FF&#39;</span></p><p class="c6"><span class="c2">green_color = </span><span class="c14 c7">&#39;#00FF00&#39;</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Fill background</span></p><p class="c6"><span class="c2">fig.patch.set_facecolor</span><span class="c1">(</span><span class="c2">background_color</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Draw simplified figures with bold lines (like stick figures)</span></p><p class="c6"><span class="c16">def</span><span class="c2">&nbsp;</span><span class="c17">draw_figure</span><span class="c2">(</span><span class="c19">x</span><span class="c2">, </span><span class="c19">y</span><span class="c2">, </span><span class="c19">scale</span><span class="c2">=</span><span class="c8">1</span><span class="c2">)</span><span class="c0">:</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Head</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;head = plt.Circle</span><span class="c1">((</span><span class="c2">x</span><span class="c1">,</span><span class="c2">&nbsp;y + </span><span class="c8">1.5</span><span class="c2">&nbsp;* scale</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c8">0.3</span><span class="c2">&nbsp;* scale</span><span class="c1">,</span><span class="c2">&nbsp;color=line_color</span><span class="c1">,</span><span class="c2">&nbsp;fill=</span><span class="c16">False</span><span class="c1">,</span><span class="c2">&nbsp;linewidth=</span><span class="c8">5</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">head</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Body</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.plot</span><span class="c1">([</span><span class="c2">x</span><span class="c1">,</span><span class="c2">&nbsp;x</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c2">y</span><span class="c1">,</span><span class="c2">&nbsp;y + </span><span class="c8">1.2</span><span class="c2">&nbsp;* scale</span><span class="c1">],</span><span class="c2">&nbsp;color=line_color</span><span class="c1">,</span><span class="c2">&nbsp;linewidth=</span><span class="c8">5</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Arms</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.plot</span><span class="c1">([</span><span class="c2">x - </span><span class="c8">0.7</span><span class="c2">&nbsp;* scale</span><span class="c1">,</span><span class="c2">&nbsp;x + </span><span class="c8">0.7</span><span class="c2">&nbsp;* scale</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c2">y + </span><span class="c8">1</span><span class="c2">&nbsp;* scale</span><span class="c1">,</span><span class="c2">&nbsp;y + </span><span class="c8">1.2</span><span class="c2">&nbsp;* scale</span><span class="c1">],</span><span class="c2">&nbsp;color=line_color</span><span class="c1">,</span><span class="c2">&nbsp;linewidth=</span><span class="c8">5</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Legs</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.plot</span><span class="c1">([</span><span class="c2">x</span><span class="c1">,</span><span class="c2">&nbsp;x - </span><span class="c8">0.5</span><span class="c2">&nbsp;* scale</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c2">y</span><span class="c1">,</span><span class="c2">&nbsp;y - </span><span class="c8">0.8</span><span class="c2">&nbsp;* scale</span><span class="c1">],</span><span class="c2">&nbsp;color=line_color</span><span class="c1">,</span><span class="c2">&nbsp;linewidth=</span><span class="c8">5</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.plot</span><span class="c1">([</span><span class="c2">x</span><span class="c1">,</span><span class="c2">&nbsp;x + </span><span class="c8">0.5</span><span class="c2">&nbsp;* scale</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c2">y</span><span class="c1">,</span><span class="c2">&nbsp;y - </span><span class="c8">0.8</span><span class="c2">&nbsp;* scale</span><span class="c1">],</span><span class="c2">&nbsp;color=line_color</span><span class="c1">,</span><span class="c2">&nbsp;linewidth=</span><span class="c8">5</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Draw multiple figures to create a pattern</span></p><p class="c6"><span class="c2">draw_figure</span><span class="c1">(</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;scale=</span><span class="c8">1.5</span><span class="c0">)</span></p><p class="c6"><span class="c2">draw_figure</span><span class="c1">(</span><span class="c8">7</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">7</span><span class="c1">,</span><span class="c2">&nbsp;scale=</span><span class="c8">1</span><span class="c0">)</span></p><p class="c6"><span class="c2">draw_figure</span><span class="c1">(</span><span class="c8">3</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">3</span><span class="c1">,</span><span class="c2">&nbsp;scale=</span><span class="c8">0.8</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Draw abstract shapes (circles, zigzags, etc.) in Haring&#39;s style</span></p><p class="c6"><span class="c16">def</span><span class="c2">&nbsp;</span><span class="c17">draw_abstract_shapes</span><span class="c2">()</span><span class="c0">:</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Draw a few circles</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;circle1 = plot.Circle</span><span class="c1">((</span><span class="c8">2</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">8</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c8">0.5</span><span class="c1">,</span><span class="c2">&nbsp;color=red_color</span><span class="c1">,</span><span class="c2">&nbsp;fill=</span><span class="c16">True</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;circle2 = plt.Circle</span><span class="c1">((</span><span class="c8">8</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">2</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c8">0.5</span><span class="c1">,</span><span class="c2">&nbsp;color=blue_color</span><span class="c1">,</span><span class="c2">&nbsp;fill=</span><span class="c16">True</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;circle3 = plt.Circle</span><span class="c1">((</span><span class="c8">4</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">6</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c8">0.3</span><span class="c1">,</span><span class="c2">&nbsp;color=green_color</span><span class="c1">,</span><span class="c2">&nbsp;fill=</span><span class="c16">True</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">circle1</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">circle2</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">circle3</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Draw zigzag lines</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;x_vals = np.linspace</span><span class="c1">(</span><span class="c8">1</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">9</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">100</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;y_vals = </span><span class="c8">1</span><span class="c2">&nbsp;+ </span><span class="c8">0.5</span><span class="c2">&nbsp;* np.sin</span><span class="c1">(</span><span class="c8">5</span><span class="c2">&nbsp;* x_vals</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.plot</span><span class="c1">(</span><span class="c2">x_vals</span><span class="c1">,</span><span class="c2">&nbsp;y_vals</span><span class="c1">,</span><span class="c2">&nbsp;color=line_color</span><span class="c1">,</span><span class="c2">&nbsp;linewidth=</span><span class="c8">3</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Draw shapes</span></p><p class="c6"><span class="c2">draw_abstract_shapes</span><span class="c0">()</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Display the figure</span></p><p class="c6"><span class="c2">plt.show</span><span class="c0">()</span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 586.50px; height: 586.50px;"><img alt="" src="images/image8.png" style="width: 586.50px; height: 586.50px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c9"><span class="c3"></span></p><p class="c13"><span class="c21">This was supposed to be the unfinished painting by Keith harrington. &nbsp;I used chat gpt coding to try and replicate The &quot;unfinished painting&quot; but it ended up with a yellow background with stick figures in it. The only thing that the unfinished painting and that code painting have in common is squiggles and the color blue.The feeling that this painting gives is just, well i think its funny. Rather then being depressed and empty it is more like three little kids playing ball while floating in the yellow sky. So to me it gives off a childlike giddy. This piece as a whole juxtaposes the original piece, and where did the yellow even come from?</span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><h2 class="c20" id="h.ykibp5e4klbr"><span class="c18 c11">Sadak in Search of the Waters of Oblivion</span></h2><p class="c9"><span class="c3"></span></p><p class="c6"><span class="c15">import</span><span class="c2">&nbsp;matplotlib.pyplot </span><span class="c15">as</span><span class="c2 c7">&nbsp;plt</span></p><p class="c6"><span class="c15">import</span><span class="c2">&nbsp;numpy </span><span class="c15">as</span><span class="c2 c7">&nbsp;np</span></p><p class="c6"><span class="c15">from</span><span class="c2">&nbsp;matplotlib.patches </span><span class="c15">import</span><span class="c2">&nbsp;Polygon</span><span class="c1">,</span><span class="c2 c7">&nbsp;Ellipse</span></p><p class="c6"><span class="c15">from</span><span class="c2">&nbsp;matplotlib.colors </span><span class="c15">import</span><span class="c2 c7">&nbsp;LinearSegmentedColormap</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Set up figure and axes for a landscape view</span></p><p class="c6"><span class="c2">fig</span><span class="c1">,</span><span class="c2">&nbsp;ax = plt.subplots</span><span class="c1">(</span><span class="c2">figsize=</span><span class="c1">(</span><span class="c8">10</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">6</span><span class="c0">))</span></p><p class="c6"><span class="c2">ax.set_xlim</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c0">)</span></p><p class="c6"><span class="c2">ax.set_ylim</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c0">)</span></p><p class="c6"><span class="c2">ax.axis</span><span class="c1">(</span><span class="c14">&#39;off&#39;</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Define color gradient (dark tones)</span></p><p class="c6"><span class="c2">colors = </span><span class="c1">[(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c1">(</span><span class="c8">0.1</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.1</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.3</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c1">(</span><span class="c8">0.3</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.3</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.5</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c1">(</span><span class="c8">0.6</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.6</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.7</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c1">(</span><span class="c8">0.9</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.9</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">1</span><span class="c0">)]</span></p><p class="c6"><span class="c2">cmap</span><span class="c2">&nbsp;= LinearSegmentedColormap.from_list</span><span class="c1">(</span><span class="c14">&quot;dark_blue&quot;</span><span class="c1">,</span><span class="c2">&nbsp;colors</span><span class="c1">,</span><span class="c2">&nbsp;N=</span><span class="c8">100</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Fill background with dark gradient</span></p><p class="c6"><span class="c2">x = np.linspace</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">100</span><span class="c0">)</span></p><p class="c6"><span class="c2">y = np.linspace</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">100</span><span class="c0">)</span></p><p class="c6"><span class="c2">X</span><span class="c1">,</span><span class="c2">&nbsp;Y = np.meshgrid</span><span class="c1">(</span><span class="c2">x</span><span class="c1">,</span><span class="c2">&nbsp;y</span><span class="c0">)</span></p><p class="c6"><span class="c2">Z = np.sin</span><span class="c1">(</span><span class="c2">Y / </span><span class="c8">10</span><span class="c1">)</span><span class="c2">&nbsp;+ np.cos</span><span class="c1">(</span><span class="c2">X / </span><span class="c8">10</span><span class="c1">)</span><span class="c2">&nbsp; </span><span class="c4"># Create subtle gradient variation</span></p><p class="c6"><span class="c2">ax.imshow</span><span class="c1">(</span><span class="c2">Z</span><span class="c1">,</span><span class="c2">&nbsp;cmap=cmap</span><span class="c1">,</span><span class="c2">&nbsp;extent=</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">),</span><span class="c2">&nbsp;aspect=</span><span class="c14">&#39;auto&#39;</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Define mountains (dark, rugged landscape shapes)</span></p><p class="c6"><span class="c16">def</span><span class="c2">&nbsp;</span><span class="c17">draw_mountain</span><span class="c2">(</span><span class="c19">x_center</span><span class="c2">, </span><span class="c19">height</span><span class="c2">, </span><span class="c19">width</span><span class="c2">, </span><span class="c19">color</span><span class="c2">)</span><span class="c0">:</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Generate random, jagged mountain shape</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;x = np.linspace</span><span class="c1">(</span><span class="c2">x_center - width / </span><span class="c8">2</span><span class="c1">,</span><span class="c2">&nbsp;x_center + width / </span><span class="c8">2</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;y = height * </span><span class="c1">(</span><span class="c8">1</span><span class="c2">&nbsp;- </span><span class="c1">(</span><span class="c2">np.</span><span class="c17">abs</span><span class="c1">(</span><span class="c2">x - x_center</span><span class="c1">)</span><span class="c2">&nbsp;/ </span><span class="c1">(</span><span class="c2">width / </span><span class="c8">2</span><span class="c1">))</span><span class="c2">**</span><span class="c8">2</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;y += np.random.uniform</span><span class="c1">(</span><span class="c8">-0.3</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.3</span><span class="c1">,</span><span class="c2">&nbsp;size=x.shape</span><span class="c1">)</span><span class="c2">&nbsp; </span><span class="c4"># Add randomness for ruggedness</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;verts = np.column_stack</span><span class="c1">([</span><span class="c2">x</span><span class="c1">,</span><span class="c2">&nbsp;y</span><span class="c0">])</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;mountain = Polygon</span><span class="c1">(</span><span class="c2">verts</span><span class="c1">,</span><span class="c2">&nbsp;closed=</span><span class="c16">True</span><span class="c1">,</span><span class="c2">&nbsp;color=color</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">mountain</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Draw multiple mountains with varying positions and colors</span></p><p class="c6"><span class="c2">draw_mountain</span><span class="c1">(</span><span class="c8">3</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">7</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">6</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c14">&#39;#1f1f2e&#39;</span><span class="c1">)</span><span class="c2">&nbsp; </span><span class="c4"># Foreground mountain, dark</span></p><p class="c6"><span class="c2">draw_mountain</span><span class="c1">(</span><span class="c8">7</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c14">&#39;#2e2e3f&#39;</span><span class="c1">)</span><span class="c2">&nbsp; </span><span class="c4"># Background mountain, slightly lighter</span></p><p class="c6"><span class="c2">draw_mountain</span><span class="c1">(</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">6.5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">7</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c14">&#39;#1c1c2c&#39;</span><span class="c1">)</span><span class="c2">&nbsp; </span><span class="c4"># Larger background mountain</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Add a faint moon-like ellipse in the sky to evoke an otherworldly source of light</span></p><p class="c6"><span class="c2">moon = Ellipse</span><span class="c1">((</span><span class="c8">8</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">8.5</span><span class="c1">),</span><span class="c2">&nbsp;width=</span><span class="c8">1</span><span class="c1">,</span><span class="c2">&nbsp;height=</span><span class="c8">1.5</span><span class="c1">,</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;#dcdcdc&quot;</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.2</span><span class="c0">)</span></p><p class="c6"><span class="c2">ax.add_patch</span><span class="c1">(</span><span class="c2">moon</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Add some atmospheric haze or mist (transparent overlay)</span></p><p class="c6"><span class="c15">for</span><span class="c2">&nbsp;i </span><span class="c25">in</span><span class="c2">&nbsp;</span><span class="c17">range</span><span class="c1">(</span><span class="c8">15</span><span class="c0">):</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;alpha = </span><span class="c8">0.02</span><span class="c2">&nbsp;+ i * </span><span class="c8 c7">0.03</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;mist = np.sin</span><span class="c1">(</span><span class="c2">Y * i / </span><span class="c8">20</span><span class="c1">)</span><span class="c2">&nbsp;* np.cos</span><span class="c1">(</span><span class="c2">X * i / </span><span class="c8">20</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.imshow</span><span class="c1">(</span><span class="c2">mist</span><span class="c1">,</span><span class="c2">&nbsp;cmap=</span><span class="c14">&#39;Blues&#39;</span><span class="c1">,</span><span class="c2">&nbsp;alpha=alpha</span><span class="c1">,</span><span class="c2">&nbsp;extent=</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c0">))</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Symbolic figure or path to represent the figure&#39;s journey</span></p><p class="c6"><span class="c2">x_path = np.linspace</span><span class="c1">(</span><span class="c8">1</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">9</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">200</span><span class="c0">)</span></p><p class="c6"><span class="c2">y_path = </span><span class="c8">3</span><span class="c2">&nbsp;+ </span><span class="c8">0.5</span><span class="c2">&nbsp;* np.sin</span><span class="c1">(</span><span class="c8">4</span><span class="c2">&nbsp;* x_path</span><span class="c1">)</span><span class="c2">&nbsp; </span><span class="c4"># Sinusoidal path for a winding trail</span></p><p class="c6"><span class="c2">ax.plot</span><span class="c1">(</span><span class="c2">x_path</span><span class="c1">,</span><span class="c2">&nbsp;y_path</span><span class="c1">,</span><span class="c2">&nbsp;color=</span><span class="c14">&#39;#e0e0e0&#39;</span><span class="c1">,</span><span class="c2">&nbsp;linestyle=</span><span class="c14">&#39;--&#39;</span><span class="c1">,</span><span class="c2">&nbsp;linewidth=</span><span class="c8">1.5</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Display the figure</span></p><p class="c6"><span class="c2">plt.show</span><span class="c0">()</span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 603.50px; height: 602.19px;"><img alt="" src="images/image1.png" style="width: 629.63px; height: 629.63px; margin-left: -13.06px; margin-top: -13.06px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c13"><span class="c21">This was supposed to be &ldquo;Sadak in Search of the Waters of Oblivion&rdquo;- John martin. it didn&#39;t really do the best job on replicating the image. I tried using chat GPT to give me assistance on the code but it ended up looking like this. This is actually closer to the painting than Keith Haring&#39;s unfinished painting was. I think that AI coding can replicate art to this extent yet, or maybe i&#39;m not doing it right.The feeling this one give me is more cool, &nbsp;temperature wise. Even though blue isnt even a color in the original i still appreciate it. The blue and white melt together to give a calming effect, especially when it with the mountain. </span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><h2 class="c20" id="h.ew6mgxvq4kwi"><span class="c18 c11">Study after Vel&aacute;zquez&#39;s Portrait of Pope Innocent X</span></h2><p class="c9"><span class="c3"></span></p><p class="c6"><span class="c15">import</span><span class="c2">&nbsp;matplotlib.pyplot </span><span class="c15">as</span><span class="c2 c7">&nbsp;plt</span></p><p class="c6"><span class="c15">import</span><span class="c2">&nbsp;numpy </span><span class="c15">as</span><span class="c2 c7">&nbsp;np</span></p><p class="c6"><span class="c15">from</span><span class="c2">&nbsp;matplotlib.patches </span><span class="c15">import</span><span class="c2">&nbsp;Ellipse</span><span class="c1">,</span><span class="c2 c7">&nbsp;Polygon</span></p><p class="c6"><span class="c15">from</span><span class="c2">&nbsp;matplotlib.lines </span><span class="c15">import</span><span class="c2 c7">&nbsp;Line2D</span></p><p class="c6"><span class="c15">from</span><span class="c2">&nbsp;matplotlib.colors </span><span class="c15">import</span><span class="c2 c7">&nbsp;LinearSegmentedColormap</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Set up the figure</span></p><p class="c6"><span class="c2">fig</span><span class="c1">,</span><span class="c2">&nbsp;ax = plt.subplots</span><span class="c1">(</span><span class="c2">figsize=</span><span class="c1">(</span><span class="c8">8</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">12</span><span class="c0">))</span></p><p class="c6"><span class="c2">ax.set_xlim</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c0">)</span></p><p class="c6"><span class="c2">ax.set_ylim</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">15</span><span class="c0">)</span></p><p class="c6"><span class="c2">ax.axis</span><span class="c1">(</span><span class="c14">&#39;off&#39;</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Background color gradient to evoke the dark, enclosed feeling</span></p><p class="c6"><span class="c2">colors = </span><span class="c1">[(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c1">(</span><span class="c8">0.2</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.1</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.3</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c1">(</span><span class="c8">0.4</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.2</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.2</span><span class="c0">)]</span></p><p class="c6"><span class="c2">cmap</span><span class="c2">&nbsp;= LinearSegmentedColormap.from_list</span><span class="c1">(</span><span class="c14">&quot;dark_purple&quot;</span><span class="c1">,</span><span class="c2">&nbsp;colors</span><span class="c1">,</span><span class="c2">&nbsp;N=</span><span class="c8">100</span><span class="c0">)</span></p><p class="c6"><span class="c2">x = np.linspace</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">100</span><span class="c0">)</span></p><p class="c6"><span class="c2">y = np.linspace</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">15</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">100</span><span class="c0">)</span></p><p class="c6"><span class="c2">X</span><span class="c1">,</span><span class="c2">&nbsp;Y = np.meshgrid</span><span class="c1">(</span><span class="c2">x</span><span class="c1">,</span><span class="c2">&nbsp;y</span><span class="c0">)</span></p><p class="c6"><span class="c2">Z = np.sin</span><span class="c1">(</span><span class="c2">Y / </span><span class="c8">15</span><span class="c1">)</span><span class="c2">&nbsp;* np.cos</span><span class="c1">(</span><span class="c2">X / </span><span class="c8">10</span><span class="c1">)</span><span class="c2">&nbsp; </span><span class="c4"># Simple gradient background</span></p><p class="c6"><span class="c2">ax.imshow</span><span class="c1">(</span><span class="c2">Z</span><span class="c1">,</span><span class="c2">&nbsp;cmap=cmap</span><span class="c1">,</span><span class="c2">&nbsp;extent=</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">15</span><span class="c1">),</span><span class="c2">&nbsp;aspect=</span><span class="c14">&#39;auto&#39;</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Draw the abstracted &quot;Pope&quot; figure</span></p><p class="c6"><span class="c16">def</span><span class="c2">&nbsp;</span><span class="c17">draw_pope</span><span class="c2">(</span><span class="c19">ax</span><span class="c2">)</span><span class="c0">:</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Robe-like shapes with dark purple, hinting at drapery</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;robe_color = </span><span class="c14 c7">&#39;#3d1f3f&#39;</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.fill_betweenx</span><span class="c1">([</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">12</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c8">4.5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">5.5</span><span class="c1">,</span><span class="c2">&nbsp;color=robe_color</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.9</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.fill_betweenx</span><span class="c1">([</span><span class="c8">3</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c8">4</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">6</span><span class="c1">,</span><span class="c2">&nbsp;color=robe_color</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.7</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Draw the distorted head as an oval with sharp color</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;head = Ellipse</span><span class="c1">((</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">13</span><span class="c1">),</span><span class="c2">&nbsp;width=</span><span class="c8">1.5</span><span class="c1">,</span><span class="c2">&nbsp;height=</span><span class="c8">2.5</span><span class="c1">,</span><span class="c2">&nbsp;angle=</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;#e0b0a0&quot;</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.8</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">head</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Eyes: two irregular lines</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.plot</span><span class="c1">([</span><span class="c8">4.6</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">5</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c8">13.4</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">13.3</span><span class="c1">],</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;black&quot;</span><span class="c1">,</span><span class="c2">&nbsp;lw=</span><span class="c8">3</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.plot</span><span class="c1">([</span><span class="c8">5.4</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">5.8</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c8">13.4</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">13.3</span><span class="c1">],</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;black&quot;</span><span class="c1">,</span><span class="c2">&nbsp;lw=</span><span class="c8">3</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Mouth: an open, distorted line to suggest a scream</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;mouth_x = </span><span class="c1">[</span><span class="c8">4.7</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">5.3</span><span class="c0">]</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;mouth_y = </span><span class="c1">[</span><span class="c8">12.7</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">12.5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">12.8</span><span class="c0">]</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.plot</span><span class="c1">(</span><span class="c2">mouth_x</span><span class="c1">,</span><span class="c2">&nbsp;mouth_y</span><span class="c1">,</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;black&quot;</span><span class="c1">,</span><span class="c2">&nbsp;lw=</span><span class="c8">2</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Shadowy lines around the face</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">Ellipse</span><span class="c1">((</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">13</span><span class="c1">),</span><span class="c2">&nbsp;width=</span><span class="c8">2.5</span><span class="c1">,</span><span class="c2">&nbsp;height=</span><span class="c8">3</span><span class="c1">,</span><span class="c2">&nbsp;angle=</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;edgecolor=</span><span class="c14">&quot;#4d2b2b&quot;</span><span class="c1">,</span><span class="c2">&nbsp;facecolor=</span><span class="c14">&quot;none&quot;</span><span class="c1">,</span><span class="c2">&nbsp;lw=</span><span class="c8">3</span><span class="c0">))</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Draw cage-like vertical and horizontal lines around the figure</span></p><p class="c6"><span class="c16">def</span><span class="c2">&nbsp;</span><span class="c17">draw_cage</span><span class="c2">()</span><span class="c0">:</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;line_color = </span><span class="c14 c7">&#39;#6a5a5a&#39;</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c15">for</span><span class="c2">&nbsp;x </span><span class="c25">in</span><span class="c2">&nbsp;np.linspace</span><span class="c1">(</span><span class="c8">3</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">7</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">5</span><span class="c0">):</span></p><p class="c6"><span class="c2">&nbsp; &nbsp; &nbsp; &nbsp;line = Line2D</span><span class="c1">([</span><span class="c2">x</span><span class="c1">,</span><span class="c2">&nbsp;x</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c8">2</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">15</span><span class="c1">],</span><span class="c2">&nbsp;color=line_color</span><span class="c1">,</span><span class="c2">&nbsp;linewidth=</span><span class="c8">1</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.7</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp; &nbsp; &nbsp;ax.add_line</span><span class="c1">(</span><span class="c2">line</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;horizontal = Line2D</span><span class="c1">([</span><span class="c8">3</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">7</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c8">8</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">8</span><span class="c1">],</span><span class="c2">&nbsp;color=line_color</span><span class="c1">,</span><span class="c2">&nbsp;linewidth=</span><span class="c8">1</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.7</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_line</span><span class="c1">(</span><span class="c2">horizontal</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Apply the &quot;Pope&quot; figure and cage overlay</span></p><p class="c6"><span class="c2">draw_pope</span><span class="c1">(</span><span class="c2">ax</span><span class="c0">)</span></p><p class="c6"><span class="c2">draw_cage</span><span class="c0">()</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Display the figure</span></p><p class="c6"><span class="c2">plt.show</span><span class="c0">()</span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 443.26px; height: 562.50px;"><img alt="" src="images/image15.png" style="width: 456.43px; height: 573.09px; margin-left: -6.58px; margin-top: -5.61px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c9"><span class="c3"></span></p><p class="c13"><span class="c21">Honestly, out of all of them this is the closest to the original. The painting here is supposed to be a replication of Francis Bacon&#39;s replication of Pope innocent X&#39;s portrait. Chat GPT semi replicated the colors and was able to emphasize the man in the middle of the portrait. It seems like they tried to emulate the dripping effect by adding lines. It may not be the best but if you know what they were trying to make/replicate you can see what the end goal was trying to be.The code replication actually makes me laugh a little. This specific piece doesnt emulate the same aura as the original at all. As this one appears to be more giddy and the &ldquo;face&rdquo; looks more satisfied then anything, its just silly. Even though this one is far from giving the same feelings i actually really like the colorsand how the purple blends in to eachother, the ai code did way better replicated the color aspect then the actual ai piece trying to replicate the painting. </span></p><h2 class="c20" id="h.4ius2gnz0hcw"><span class="c18 c11">Fallen Angel</span><span class="c18">&nbsp;</span></h2><p class="c6"><span class="c15">import</span><span class="c2">&nbsp;matplotlib.pyplot </span><span class="c15">as</span><span class="c2 c7">&nbsp;plt</span></p><p class="c6"><span class="c15">import</span><span class="c2">&nbsp;numpy </span><span class="c15">as</span><span class="c2 c7">&nbsp;np</span></p><p class="c6"><span class="c15">from</span><span class="c2">&nbsp;matplotlib.patches </span><span class="c15">import</span><span class="c2">&nbsp;Ellipse</span><span class="c1">,</span><span class="c2 c7">&nbsp;Polygon</span></p><p class="c6"><span class="c15">from</span><span class="c2">&nbsp;matplotlib.colors </span><span class="c15">import</span><span class="c2 c7">&nbsp;LinearSegmentedColormap</span></p><p class="c6"><span class="c15">import</span><span class="c2">&nbsp;matplotlib.patheffects </span><span class="c15">as</span><span class="c2 c7">&nbsp;PathEffects</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Set up the figure</span></p><p class="c6"><span class="c2">fig</span><span class="c1">,</span><span class="c2">&nbsp;ax = plt.subplots</span><span class="c1">(</span><span class="c2">figsize=</span><span class="c1">(</span><span class="c8">8</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">12</span><span class="c0">))</span></p><p class="c6"><span class="c2">ax.set_xlim</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c0">)</span></p><p class="c6"><span class="c2">ax.set_ylim</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">15</span><span class="c0">)</span></p><p class="c6"><span class="c2">ax.axis</span><span class="c1">(</span><span class="c14">&#39;off&#39;</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Background gradient to represent a dramatic sky</span></p><p class="c6"><span class="c2">colors = </span><span class="c1">[(</span><span class="c8">0.2</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.1</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.3</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c1">(</span><span class="c8">0.4</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.3</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.5</span><span class="c1">),</span><span class="c2">&nbsp;</span><span class="c1">(</span><span class="c8">0.8</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.6</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0.9</span><span class="c0">)]</span></p><p class="c6"><span class="c2">cmap</span><span class="c2">&nbsp;= LinearSegmentedColormap.from_list</span><span class="c1">(</span><span class="c14">&quot;sunset&quot;</span><span class="c1">,</span><span class="c2">&nbsp;colors</span><span class="c1">,</span><span class="c2">&nbsp;N=</span><span class="c8">100</span><span class="c0">)</span></p><p class="c6"><span class="c2">x = np.linspace</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">100</span><span class="c0">)</span></p><p class="c6"><span class="c2">y = np.linspace</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">15</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">100</span><span class="c0">)</span></p><p class="c6"><span class="c2">X</span><span class="c1">,</span><span class="c2">&nbsp;Y = np.meshgrid</span><span class="c1">(</span><span class="c2">x</span><span class="c1">,</span><span class="c2">&nbsp;y</span><span class="c0">)</span></p><p class="c6"><span class="c2">Z = np.cos</span><span class="c1">(</span><span class="c2">Y / </span><span class="c8">5</span><span class="c1">)</span><span class="c2">&nbsp;* np.sin</span><span class="c1">(</span><span class="c2">X / </span><span class="c8">5</span><span class="c0">)</span></p><p class="c6"><span class="c2">ax.imshow</span><span class="c1">(</span><span class="c2">Z</span><span class="c1">,</span><span class="c2">&nbsp;cmap=cmap</span><span class="c1">,</span><span class="c2">&nbsp;extent=</span><span class="c1">(</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">0</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">15</span><span class="c1">),</span><span class="c2">&nbsp;aspect=</span><span class="c14">&#39;auto&#39;</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Define the angelic figure</span></p><p class="c6"><span class="c16">def</span><span class="c2">&nbsp;</span><span class="c17">draw_angel</span><span class="c2">(</span><span class="c19">ax</span><span class="c2">)</span><span class="c0">:</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Head of the angel: a simple circle with a soft color to represent skin tone</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;head = Ellipse</span><span class="c1">((</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">12</span><span class="c1">),</span><span class="c2">&nbsp;width=</span><span class="c8">1</span><span class="c1">,</span><span class="c2">&nbsp;height=</span><span class="c8">1.2</span><span class="c1">,</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;#f5d6c6&quot;</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.9</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">head</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Eyes as dark small ellipses</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;eye1 = Ellipse</span><span class="c1">((</span><span class="c8">4.85</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">12.1</span><span class="c1">),</span><span class="c2">&nbsp;width=</span><span class="c8">0.1</span><span class="c1">,</span><span class="c2">&nbsp;height=</span><span class="c8">0.2</span><span class="c1">,</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;black&quot;</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;eye2 = Ellipse</span><span class="c1">((</span><span class="c8">5.15</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">12.1</span><span class="c1">),</span><span class="c2">&nbsp;width=</span><span class="c8">0.1</span><span class="c1">,</span><span class="c2">&nbsp;height=</span><span class="c8">0.2</span><span class="c1">,</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;black&quot;</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">eye1</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">eye2</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Body: a tapered shape to suggest the torso</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;body = Polygon</span><span class="c1">([[</span><span class="c8">4.5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c8">5.5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">10</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c8">5.2</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">11.5</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c8">4.8</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">11.5</span><span class="c1">]],</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;#d0a89b&quot;</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.8</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">body</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c4"># Wings as faint, translucent shapes to hint at feathers</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;left_wing = Polygon</span><span class="c1">([[</span><span class="c8">4</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">11</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c8">3</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">13</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c8">4.5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">13.5</span><span class="c1">]],</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;#b0a7d0&quot;</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.3</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;right_wing = Polygon</span><span class="c1">([[</span><span class="c8">6</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">11</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c8">7</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">13</span><span class="c1">],</span><span class="c2">&nbsp;</span><span class="c1">[</span><span class="c8">5.5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">13.5</span><span class="c1">]],</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;#b0a7d0&quot;</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.3</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">left_wing</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">right_wing</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Draw the tear or glistening effect under the eye to hint at sadness</span></p><p class="c6"><span class="c16">def</span><span class="c2">&nbsp;</span><span class="c17">draw_tear</span><span class="c2">(</span><span class="c19">ax</span><span class="c2">)</span><span class="c0">:</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;tear = Ellipse</span><span class="c1">((</span><span class="c8">4.85</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">11.8</span><span class="c1">),</span><span class="c2">&nbsp;width=</span><span class="c8">0.1</span><span class="c1">,</span><span class="c2">&nbsp;height=</span><span class="c8">0.3</span><span class="c1">,</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;#77c1e2&quot;</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.7</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">tear</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Draw soft, celestial light around the angel</span></p><p class="c6"><span class="c16">def</span><span class="c2">&nbsp;</span><span class="c17">draw_celestial_light</span><span class="c2">(</span><span class="c19">ax</span><span class="c2">)</span><span class="c0">:</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;light_circle = Ellipse</span><span class="c1">((</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">12</span><span class="c1">),</span><span class="c2">&nbsp;width=</span><span class="c8">4</span><span class="c1">,</span><span class="c2">&nbsp;height=</span><span class="c8">6</span><span class="c1">,</span><span class="c2">&nbsp;color=</span><span class="c14">&quot;#f5f1d4&quot;</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.3</span><span class="c0">)</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.add_patch</span><span class="c1">(</span><span class="c2">light_circle</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Draw the abstract angel and the atmospheric light</span></p><p class="c6"><span class="c2">draw_angel</span><span class="c1">(</span><span class="c2">ax</span><span class="c0">)</span></p><p class="c6"><span class="c2">draw_tear</span><span class="c1">(</span><span class="c2">ax</span><span class="c0">)</span></p><p class="c6"><span class="c2">draw_celestial_light</span><span class="c1">(</span><span class="c2">ax</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Add faint rays of light to enhance the celestial atmosphere</span></p><p class="c6"><span class="c15">for</span><span class="c2">&nbsp;i </span><span class="c25">in</span><span class="c2">&nbsp;</span><span class="c17">range</span><span class="c1">(</span><span class="c8">12</span><span class="c0">):</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;angle = i * </span><span class="c8 c7">15</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;ax.plot</span><span class="c0">(</span></p><p class="c6"><span class="c2">&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c1">[</span><span class="c8">5</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">5</span><span class="c2">&nbsp;+ np.cos</span><span class="c1">(</span><span class="c2">np.radians</span><span class="c1">(</span><span class="c2">angle</span><span class="c1">))</span><span class="c2">&nbsp;* </span><span class="c8">6</span><span class="c0">],</span></p><p class="c6"><span class="c2">&nbsp; &nbsp; &nbsp; &nbsp;</span><span class="c1">[</span><span class="c8">12</span><span class="c1">,</span><span class="c2">&nbsp;</span><span class="c8">12</span><span class="c2">&nbsp;+ np.sin</span><span class="c1">(</span><span class="c2">np.radians</span><span class="c1">(</span><span class="c2">angle</span><span class="c1">))</span><span class="c2">&nbsp;* </span><span class="c8">8</span><span class="c0">],</span></p><p class="c6"><span class="c2">&nbsp; &nbsp; &nbsp; &nbsp;color=</span><span class="c14">&quot;#f5e6a5&quot;</span><span class="c1">,</span><span class="c2">&nbsp;alpha=</span><span class="c8">0.2</span><span class="c1">,</span><span class="c2">&nbsp;lw=</span><span class="c8">3</span><span class="c1">,</span><span class="c2">&nbsp;linestyle=</span><span class="c14 c7">&quot;--&quot;</span></p><p class="c6"><span class="c2">&nbsp; &nbsp;</span><span class="c0">)</span></p><p class="c6 c10"><span class="c2 c7"></span></p><p class="c6"><span class="c4"># Display the final figure</span></p><p class="c6"><span class="c2">plt.show</span><span class="c1">()</span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c13"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 326.00px; height: 482.50px;"><img alt="" src="images/image2.png" style="width: 336.00px; height: 488.43px; margin-left: -5.00px; margin-top: -5.93px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c13"><span class="c3">This Ai generated code gave me a picture that more then anything I find rather cute. Yes this picture does express sadness but the type sadness is widly different. This one is cute and the single tear and how miniature it looks mirror the feeling that comes when you see a kitten wine on the internet. I love the halo effect it does give that etherial aura but in its own little way. But the main contrast between the is in this one the sadness is very one layerd/ one note there is nothing deeper behind it while the originla has layer and layers of feelings and emotions all just put into the subjects eyes. </span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c9"><span class="c3"></span></p><p class="c23 title" id="h.8b1ugnccklpn"><span>Final thoughts</span></p><p class="c29"><span class="c21">In my own reflection, I&rsquo;ve realized that greatness in art takes time and effort. AI can create visually appealing work, but it requires detailed instructions from humans to do so. It doesn&#39;t make creative decisions on its own or imbue work with symbolic meaning&mdash;it operates at a surface level, executing what it&rsquo;s told. Specifically, I would enter a description like- &nbsp;&quot;it relies heavily on expressive, abstract forms, distortion, and emotive color work&quot; or stuff like &quot;intricate detail, atmospheric lighting, and complex landscape&quot; and would give the best version they can even without having the abilities to do so. But with this idea- why does it fail to give off the same feeling as a organic art piece? Part of this stems from the fundamental differences in how humans and AI &quot;learn.&quot; While AI can instantly synthesize countless existing ideas into a visually stunning piece, it does so without experiencing the journey&mdash;without the struggle, persistence, and imperfection that breathe life into human creations. AI&#39;s pursuit of technical perfection is precisely what drains its work of genuine warmth and depth. Human creativity is messy and nuanced; it slowly unfolds over years, embracing missteps and limitations. AI, on the other hand, seamlessly generates perfection in milliseconds. It lacks the shared human experiences that often serve as the foundation for passion driven art. AI can mimic but not feel; it produces an art that, however &quot;perfect,&quot; lacks the essential humanness that arises from imperfection. The reason lies in the nature of &quot;learning.&quot; While AI can technically learn, its process is fundamentally different from a human&rsquo;s. AI collects pre-existing ideas and produces a &quot;perfect&quot; composition, but it lacks the struggle and personal growth that define human learning. Human creativity is messy, filled with mistakes, and shaped by experiences and emotions. It can take years for an artist to develop their craft, pushing through challenges and imperfections to create something truly alive. AI, however, skips that process entirely, which is why its work can feel so lifeless&mdash;it doesn&rsquo;t possess the &quot;life&quot; that struggle and imperfection bring That said, I&rsquo;ve come to respect AI art and AI as a whole. As much as it bothers me, it&rsquo;s undeniably smart and adaptive. I no longer see it as a replacement for human creativity but as a tool that can enhance it. Creating with AI requires specificity; you have to tell it exactly what you want to see. As intelligent as AI is, it still can&rsquo;t exercise creative liberty or intuition. </span><span class="c21">It&rsquo;s not AI art itself that&rsquo;s the problem&mdash;it&rsquo;s how people might misuse it. The danger lies in those who exploit its capabilities irresponsibly, taking advantage of its speed and efficiency without respecting the artistry behind it. AI can be an incredible tool for creativity, but it will never fully replace the deeply human process of creating something that </span><span class="c21">breathes, reflects, and evolves over time.</span></p><div><p class="c9"><span class="c3"></span></p></div></body></html>
